#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 5

int stack[MAX_SIZE];
int top = -1;

void push() {
    int item;
    if (top == MAX_SIZE - 1) {
        printf("Stack Overflow: Cannot push element onto full stack\n");
        return;
    }
    printf("Enter the elements to be inserted (separated by space): ");
    while (top < MAX_SIZE - 1 && scanf("%d", &item) == 1) {
        stack[++top] = item;
        printf("Element %d pushed to stack\n", item);
    }
    while (getchar() != '\n'); // Clear input buffer
}

void pop() {
    if (top == -1) {
        printf("Stack Underflow: Cannot pop element from empty stack\n");
        return;
    }
    printf("Popped element: %d\n", stack[top--]);
}

void display() {
    if (top == -1) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements:\n");
    for (int i = top; i >= 0; i--) {
        printf("%d\n", stack[i]);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nStack Operations\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Clear input buffer

        switch (choice) {
            case 1:
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting program\n");
                exit(0);
            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
