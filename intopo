#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>
#define size 50

char s[size];
int top = -1;

void push(char elem) {
    s[++top] = elem;
}

char pop() {
    return (s[top--]);
}

int pr(char elem) {
    switch (elem) {
        case '#':
            return 0;
        case '(':
            return 1;
        case '+':
        case '-':
            return 2;
        case '*':
        case '/':
        case '%':
            return 3;
        case '^':
            return 4;
        default:
            return -1;
    }
}

int main() {
    char infix[50], pofx[50], ch;
    int i = 0, k = 0;
    printf("\nRead the infix expression: ");
    scanf("%s", infix);
    push('#');
    while ((ch = infix[i++]) != '\0') {
        if (ch == '(')
            push(ch);
        else if (isalnum(ch))
            pofx[k++] = ch;
        else if (ch == ')') {
            while (s[top] != '(')
                pofx[k++] = pop();
            pop(); // Discard the '('
        }
        else {
            while (pr(s[top]) >= pr(ch))
                pofx[k++] = pop();
            push(ch);
        }
    }
    // Pop remaining operators from the stack
    while (s[top] != '#') {
        pofx[k++] = pop();
    }
    pofx[k] = '\0'; // Null terminate the postfix expression
    printf("Postfix expression: %s\n", pofx);
    return 0;
}
